; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_09FLKFJBLM@ntdll?4dll?$AA@		; `string'
PUBLIC	??_C@_0O@JGECDCHJ@RtlGetVersion?$AA@		; `string'
EXTRN	__imp_FreeLibrary:PROC
EXTRN	__imp_LoadLibraryA:PROC
;	COMDAT ??_C@_0O@JGECDCHJ@RtlGetVersion?$AA@
CONST	SEGMENT
??_C@_0O@JGECDCHJ@RtlGetVersion?$AA@ DB 'RtlGetVersion', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLKFJBLM@ntdll?4dll?$AA@
CONST	SEGMENT
??_C@_09FLKFJBLM@ntdll?4dll?$AA@ DB 'ntdll.dll', 00H	; `string'
PUBLIC	GetWindowsVer
;	COMDAT pdata
; File d:\sdk\c\library\algorithms\information theory and signal processing\coding theory\lossless compression algorithms\dictionary coders\lempel–ziv\lempel–ziv–markov chain (lzma)\xz\src\windowsgetversion.c
pdata	SEGMENT
$pdata$GetWindowsVer DD imagerel $LN6
	DD	imagerel $LN6+159
	DD	imagerel $unwind$GetWindowsVer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$GetWindowsVer DD 020701H
	DD	01d0107H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT GetWindowsVer
_TEXT	SEGMENT
os_version$ = 32
hNtdll$27942 = 40
RtlGetVersionPtr$27941 = 48
os_info$27951 = 64
GetWindowsVer PROC					; COMDAT

; 26   : { LONG

$LN6:
  00000	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H

; 27   :     os_version = -1L;

  00007	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR os_version$[rsp], -1

; 28   : 
; 29   :   { PFN_RTLGETVERSIONEX
; 30   :       RtlGetVersionPtr;
; 31   : 
; 32   :     HMODULE hNtdll = LoadLibrary (TEXT("ntdll.dll"));

  0000f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll?$AA@
  00016	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadLibraryA
  0001c	48 89 44 24 28	 mov	 QWORD PTR hNtdll$27942[rsp], rax

; 33   : 
; 34   :     if (not hNtdll)

  00021	48 83 7c 24 28
	00		 cmp	 QWORD PTR hNtdll$27942[rsp], 0
  00027	75 02		 jne	 SHORT $LN3@GetWindows

; 35   :       goto LoadLibraryFailed;

  00029	eb 68		 jmp	 SHORT $LoadLibraryFailed$27945
$LN3@GetWindows:

; 36   : 
; 37   :     RtlGetVersionPtr = (PFN_RTLGETVERSIONEX)GetProcAddress (hNtdll, "RtlGetVersion");

  0002b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@JGECDCHJ@RtlGetVersion?$AA@
  00032	48 8b 4c 24 28	 mov	 rcx, QWORD PTR hNtdll$27942[rsp]
  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetProcAddress
  0003d	48 89 44 24 30	 mov	 QWORD PTR RtlGetVersionPtr$27941[rsp], rax

; 38   : 
; 39   :     if (RtlGetVersionPtr == NULL)

  00042	48 83 7c 24 30
	00		 cmp	 QWORD PTR RtlGetVersionPtr$27941[rsp], 0
  00048	75 02		 jne	 SHORT $LN2@GetWindows

; 40   :       goto GetProcFailed;

  0004a	eb 3c		 jmp	 SHORT $GetProcFailed$27950
$LN2@GetWindows:

; 41   : 
; 42   :     { OSVERSIONINFOEX
; 43   :         os_info;
; 44   : 
; 45   :       os_info.dwOSVersionInfoSize = sizeof(os_info);

  0004c	c7 44 24 40 9c
	00 00 00	 mov	 DWORD PTR os_info$27951[rsp], 156 ; 0000009cH

; 46   :       if ((*RtlGetVersionPtr) (&os_info) != STATUS_SUCCESS)

  00054	48 8d 4c 24 40	 lea	 rcx, QWORD PTR os_info$27951[rsp]
  00059	ff 54 24 30	 call	 QWORD PTR RtlGetVersionPtr$27941[rsp]
  0005d	85 c0		 test	 eax, eax
  0005f	74 02		 je	 SHORT $LN1@GetWindows

; 47   :         goto GetVersionFailed;

  00061	eb 25		 jmp	 SHORT $GetVersionFailed$27954
$LN1@GetWindows:

; 48   : 
; 49   :       os_version = PACKVERSION(os_info.dwMajorVersion, os_info.dwMinorVersion);

  00063	8b 44 24 48	 mov	 eax, DWORD PTR os_info$27951[rsp+8]
  00067	48 25 ff ff 00
	00		 and	 rax, 65535		; 0000ffffH
  0006d	0f b7 d0	 movzx	 edx, ax
  00070	8b 44 24 44	 mov	 eax, DWORD PTR os_info$27951[rsp+4]
  00074	48 25 ff ff 00
	00		 and	 rax, 65535		; 0000ffffH
  0007a	0f b7 c8	 movzx	 ecx, ax
  0007d	c1 e1 10	 shl	 ecx, 16
  00080	8b c2		 mov	 eax, edx
  00082	0b c1		 or	 eax, ecx
  00084	89 44 24 20	 mov	 DWORD PTR os_version$[rsp], eax
$GetVersionFailed$27954:
$GetProcFailed$27950:

; 50   :     }
; 51   : 
; 52   : GetVersionFailed:
; 53   : GetProcFailed:
; 54   :     FreeLibrary (hNtdll);

  00088	48 8b 4c 24 28	 mov	 rcx, QWORD PTR hNtdll$27942[rsp]
  0008d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_FreeLibrary
$LoadLibraryFailed$27945:

; 55   :   }
; 56   : 
; 57   : LoadLibraryFailed:
; 58   :   return (os_version);

  00093	8b 44 24 20	 mov	 eax, DWORD PTR os_version$[rsp]

; 59   : }

  00097	48 81 c4 e8 00
	00 00		 add	 rsp, 232		; 000000e8H
  0009e	c3		 ret	 0
GetWindowsVer ENDP
END
