; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	d:\SDK\C\Library\Algorithms\Information theory and signal processing\Coding theory\Lossless compression algorithms\Dictionary coders\Lempel?Ziv\Lempel?Ziv?Markov chain (LZMA)\xz\src\c89\liblzma\common\vli_size.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	_lzma_vli_size
; Function compile flags: /Odtp
; File d:\sdk\c\library\algorithms\information theory and signal processing\coding theory\lossless compression algorithms\dictionary coders\lempel–ziv\lempel–ziv–markov chain (lzma)\xz\src\c89\liblzma\common\vli_size.c
;	COMDAT _lzma_vli_size
_TEXT	SEGMENT
_i$32218 = -4						; size = 4
_vli$ = 8						; size = 8
_lzma_vli_size PROC					; COMDAT

; 18   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 19   : 	if (vli > LZMA_VLI_MAX)

  00004	81 7d 0c ff ff
	ff 7f		 cmp	 DWORD PTR _vli$[ebp+4], 2147483647 ; 7fffffffH
  0000b	72 0c		 jb	 SHORT $LN4@lzma_vli_s
  0000d	77 06		 ja	 SHORT $LN7@lzma_vli_s
  0000f	83 7d 08 ff	 cmp	 DWORD PTR _vli$[ebp], -1
  00013	76 04		 jbe	 SHORT $LN4@lzma_vli_s
$LN7@lzma_vli_s:

; 20   : 		return 0;

  00015	33 c0		 xor	 eax, eax
  00017	eb 2e		 jmp	 SHORT $LN5@lzma_vli_s
$LN4@lzma_vli_s:

; 21   : 
; 22   :   { uint32_t i = 0;

  00019	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$32218[ebp], 0
$LN3@lzma_vli_s:

; 23   : 	do {
; 24   : 		vli >>= 7;

  00020	8b 45 08	 mov	 eax, DWORD PTR _vli$[ebp]
  00023	8b 55 0c	 mov	 edx, DWORD PTR _vli$[ebp+4]
  00026	b1 07		 mov	 cl, 7
  00028	e8 00 00 00 00	 call	 __aullshr
  0002d	89 45 08	 mov	 DWORD PTR _vli$[ebp], eax
  00030	89 55 0c	 mov	 DWORD PTR _vli$[ebp+4], edx

; 25   : 		++i;

  00033	8b 45 fc	 mov	 eax, DWORD PTR _i$32218[ebp]
  00036	83 c0 01	 add	 eax, 1
  00039	89 45 fc	 mov	 DWORD PTR _i$32218[ebp], eax

; 26   : 	} while (vli != 0);

  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _vli$[ebp]
  0003f	0b 4d 0c	 or	 ecx, DWORD PTR _vli$[ebp+4]
  00042	75 dc		 jne	 SHORT $LN3@lzma_vli_s

; 27   : 
; 28   : 	assert(i <= LZMA_VLI_BYTES_MAX);
; 29   : 	return i;

  00044	8b 45 fc	 mov	 eax, DWORD PTR _i$32218[ebp]
$LN5@lzma_vli_s:

; 30   :   }
; 31   : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
_lzma_vli_size ENDP
END
